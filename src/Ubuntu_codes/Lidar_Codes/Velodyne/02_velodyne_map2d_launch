#!/usr/bin/env python3
from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription, ExecuteProcess
from launch.conditions import IfCondition, UnlessCondition
from launch.substitutions import LaunchConfiguration
from launch_ros.actions import Node, SetRemap
from launch_ros.substitutions import FindPackageShare
from launch.launch_description_sources import PythonLaunchDescriptionSource
from launch.actions import Shutdown
import os

def generate_launch_description():

    ## ***** Launch arguments *****e
    output_pbstream_arg = DeclareLaunchArgument('output_pbstram', default_value="output_map.pbstream")
    use_sim_time_arg = DeclareLaunchArgument('use_sim_time', default_value='False')

    ## ***** File paths ******
    pkg_share = FindPackageShare('cartographer_ros').find('cartographer_ros')
    urdf_file = os.path.join('/home/pae/ros2_ws/src/cartographer_ros/cartographer_ros/urdf/velodyne3_.urdf') 
    with open(urdf_file, 'r') as infp:
        robot_desc = infp.read()

    velodyne =Node(
            package='velodyne_driver',
            executable='velodyne_driver_node',
            name='velodyne_driver_node',
            output='screen',
            parameters=[
                {'device_ip': '192.168.1.201'},  
                {'frame_id': 'velodyne'},
                {'model': 'VLP16'},
            ],
        )
    
    robot_state_publisher_node = Node(
        package='robot_state_publisher',
        executable='robot_state_publisher',
        parameters=[
            {'robot_description': robot_desc},
            {'use_sim_time': LaunchConfiguration('use_sim_time')}],
        output='screen'
    )

    cartographer_node = Node(
        package='cartographer_ros',
        executable='cartographer_node',
        parameters=[{'use_sim_time': LaunchConfiguration('use_sim_time')}],
        arguments=[
            '-configuration_directory', '/home/pae/ros2_ws/src/cartographer_ros/cartographer_ros/configuration_files',
            '-configuration_basename', '3velodyne_16 _2d_2.lua',
            '-save_state_filename', LaunchConfiguration('output_pbstream')],
        remappings=[
        ('scan1', '/scan'),  
        ],
        output='screen'
    )

    cartographer_occupancy_grid_node = Node(
        package='cartographer_ros',
        executable='cartographer_occupancy_grid_node',
        parameters=[
            {'use_sim_time': True},
            {'resolution': 0.05}],
    )

    rviz = Node(
        package='rviz2',
        executable='rviz2',
        name='rviz',
        output='screen',
        arguments=['-d', '/home/pae/ros2_ws/src/cartographer_ros/cartographer_ros/configuration_files/demo_2d.rviz']
    )

    return LaunchDescription([
        output_pbstream_arg,
        use_sim_time_arg,
        # Nodes
        robot_state_publisher_node,
        cartographer_node,
        cartographer_occupancy_grid_node,
        velodyne,
        rviz,
    ])

















































































































































































































































































































































































































































































































































































































































































































































































































































































    cartographer_occupancy_grid_node = Node(
        package='cartographer_ros',
        executable='cartographer_occupancy_grid_node',
        parameters=[
            {'use_sim_time': True},
            {'resolution': 0.05}],
    )

    rviz = Node(
        package='rviz2',
        executable='rviz2',
        name='rviz',
        output='screen',
        arguments=['-d', '/home/jetsper/Jetsper/src/cartographer_ros-ros2/cartographer_ros/configuration_files/demo_3d.rviz']
    )

    return LaunchDescription([
        #bag_filename_arg,
        use_sim_time_arg,

        # Nodes
        robot_state_publisher_node,
        cartographer_node,
        cartographer_occupancy_grid_node,
        velodyne,
        rviz,
    ])

