#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from std_msgs.msg import Int32

class AnglePubNode(Node):

    def __init__(self):
        super().__init__("angle_publisher_node")
        self.angle_pub_ = self.create_publisher(Int32, "/brake_setpoint_topic", 10) 
        self.angle_sub_ = self.create_subscription(Int32, "/brake_control_topic", self.brake_callback, 10)
        self.ang = 30
        self.brake_logic = 0
        #self.upp = 1
        self.timer_ = self.create_timer(1.0, self.send_angle_command)
        self.get_logger().info("angle publisher node starts :)")

    def send_angle_command(self):
        msg = Int32()
        
        if self.brake_logic == 0:
            self.ang = 30
        elif self.brake_logic == 1:
            self.ang = 37
        else:
            self.ang = 30

        msg.data = self.ang
        self.angle_pub_.publish(msg)

    def brake_callback(self, msg:Int32):
        self.brake_logic = msg.data


def main(args=None):
    rclpy.init(args=args)
    node = AnglePubNode()
    rclpy.spin(node)
    rclpy.shutdown()

if __name__ == '__main__':
    main()
